/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swingdemoexample;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.HashMap;
import java.util.Scanner;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raviet
 */

public class interfac extends javax.swing.JFrame {

    /**
     * Creates new form interfac
     */
    public interfac() throws FileNotFoundException, IOException {
         HashMap<String, Integer> map = new HashMap<>();
         //Scanner scanner = new Scanner(new FileInputStream("F:\\ordwitpri.xlsx"));
         String st1,st;
         File file=new File("F:\\itmpri1.txt");//Reading Items From File
        File file1=new File("F:\\itemss.txt");//Reading Item Class From File
        BufferedReader br=new BufferedReader(new FileReader(file));
        BufferedReader br1=new BufferedReader(new FileReader(file1));
         while((st=br.readLine())!=null && (st1=br1.readLine())!=null){
           //System.out.print(st1+" ");
            //System.out.println(st);
            int i=Integer.parseInt(st);
            map.put(st1,i);//Creating hashmap for items along with their classes
           
            
        }
         System.out.println(map);
              File realName = new File("F:\\itemz1.txt");
realName.delete();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        itemname = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        quantity = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextField1 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mdl = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        itemname1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        quantity1 = new javax.swing.JSpinner();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextField4 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        itemname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "none", "air_fresheners_candles", "asian_foods", "baby_accessories", "baby_bath_body_care", "baby_food_formula", "bakery_desserts", "baking_ingredients", "baking_supplies_decor", "beauty", "beers_coolers", "body_lotions_soap", "bread", "breakfast_bakery", "breakfast_bars_pastries", "bulk_dried_fruits_vegetables", "bulk_grains_rice_dried_goods", "buns_rolls", "butter", "candy_chocolate", "canned_fruit_applesauce", "canned_jarred_vegetables", "canned_meals_beans", "canned_meat_seafood", "cat_food_care", "cereal", "chips_pretzels", "cleaning_products", "cocoa_drink_mixes", "coffee", "cold_flu_allergy", "condiments", "cookies_cakes", "crackers", "cream", "deodorants", "diapers_wipes", "digestion", "dish_detergents", "dog_food_care", "doughs_gelatins_bake_mixes", "dry_pasta", "eggs", "energy_granola_bars", "energy_sports_drinks", "eye_ear_care", "facial_care", "feminine_care", "first_aid", "food_storage", "fresh_dips_tapenades", "fresh_fruits", "fresh_herbs", "fresh_pasta", "fresh_vegetables", "frozen_appetizers_sides", "frozen_breads_doughs", "frozen_breakfast", "frozen_dessert", "frozen_juice", "frozen_meals", "frozen_meat_seafood", "frozen_pizza", "frozen_produce", "frozen_vegan_vegetarian", "fruit_vegetable_snacks", "grains_rice_dried_goods", "granola", "hair_care", "honeys_syrups_nectars", "hot_cereal_pancake_mixes", "hot_dogs_bacon_sausage", "ice_cream_ice", "ice_cream_toppings", "indian_foods", "instant_foods", "juice_nectars", "kitchen_supplies", "kosher_foods", "latino_foods", "laundry", "lunch_meat", "marinades_meat_preparation", "meat_counter", "milk", "mint_gum", "missing", "more_household", "muscles_joints_pain_relief", "nuts_seeds_dried_fruit", "oils_vinegars", "oral_hygiene", "other", "other_creams_cheeses", "packaged_cheese", "packaged_meat", "packaged_poultry", "packaged_produce", "packaged_seafood", "packaged_vegetables_fruits", "paper_goods", "pasta_sauce", "pickled_goods_olives", "plates_bowls_cups_flatware", "popcorn_jerky", "poultry_counter", "prepared_meals", "prepared_soups_salads", "preserved_dips_spreads", "protein_meal_replacements", "red_wines", "refrigerated", "refrigerated_pudding_desserts", "salad_dressing_toppings", "seafood_counter", "shave_needs", "skin_care", "soap", "soft_drinks", "soup_broth_bouillon", "soy_lactosefree", "specialty_cheeses", "specialty_wines_champagnes", "spices_seasonings", "spirits", "spreads", "tea", "tofu_meat_alternatives", "tortillas_flat_bread", "trail_mix_snack_mix", "trash_bags_liners", "vitamins_supplements", "water_seltzer_sparkling_water", "white_wines", "yogurt", " " }));

        jLabel1.setText("Item Name      :");

        jLabel2.setText("Quantity         :");

        quantity.setModel(new javax.swing.SpinnerNumberModel());

        jButton1.setText("Enter Item");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("New Transaction");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Predict");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.setColumns(20);
        jTextField1.setRows(5);
        jScrollPane1.setViewportView(jTextField1);

        jLabel7.setText("Customer Id :");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(26, 26, 26)
                                .addComponent(jButton2))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(itemname, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(0, 69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(itemname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        mdl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Quantity", "Price", "Net cost"
            }
        ));
        jScrollPane2.setViewportView(mdl);

        jTextField2.setText("0");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Total Cost:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(0, 51, Short.MAX_VALUE))
        );

        itemname1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "none", "air_fresheners_candles", "asian_foods", "baby_accessories", "baby_bath_body_care", "baby_food_formula", "bakery_desserts", "baking_ingredients", "baking_supplies_decor", "beauty", "beers_coolers", "body_lotions_soap", "bread", "breakfast_bakery", "breakfast_bars_pastries", "bulk_dried_fruits_vegetables", "bulk_grains_rice_dried_goods", "buns_rolls", "butter", "candy_chocolate", "canned_fruit_applesauce", "canned_jarred_vegetables", "canned_meals_beans", "canned_meat_seafood", "cat_food_care", "cereal", "chips_pretzels", "cleaning_products", "cocoa_drink_mixes", "coffee", "cold_flu_allergy", "condiments", "cookies_cakes", "crackers", "cream", "deodorants", "diapers_wipes", "digestion", "dish_detergents", "dog_food_care", "doughs_gelatins_bake_mixes", "dry_pasta", "eggs", "energy_granola_bars", "energy_sports_drinks", "eye_ear_care", "facial_care", "feminine_care", "first_aid", "food_storage", "fresh_dips_tapenades", "fresh_fruits", "fresh_herbs", "fresh_pasta", "fresh_vegetables", "frozen_appetizers_sides", "frozen_breads_doughs", "frozen_breakfast", "frozen_dessert", "frozen_juice", "frozen_meals", "frozen_meat_seafood", "frozen_pizza", "frozen_produce", "frozen_vegan_vegetarian", "fruit_vegetable_snacks", "grains_rice_dried_goods", "granola", "hair_care", "honeys_syrups_nectars", "hot_cereal_pancake_mixes", "hot_dogs_bacon_sausage", "ice_cream_ice", "ice_cream_toppings", "indian_foods", "instant_foods", "juice_nectars", "kitchen_supplies", "kosher_foods", "latino_foods", "laundry", "lunch_meat", "marinades_meat_preparation", "meat_counter", "milk", "mint_gum", "missing", "more_household", "muscles_joints_pain_relief", "nuts_seeds_dried_fruit", "oils_vinegars", "oral_hygiene", "other", "other_creams_cheeses", "packaged_cheese", "packaged_meat", "packaged_poultry", "packaged_produce", "packaged_seafood", "packaged_vegetables_fruits", "paper_goods", "pasta_sauce", "pickled_goods_olives", "plates_bowls_cups_flatware", "popcorn_jerky", "poultry_counter", "prepared_meals", "prepared_soups_salads", "preserved_dips_spreads", "protein_meal_replacements", "red_wines", "refrigerated", "refrigerated_pudding_desserts", "salad_dressing_toppings", "seafood_counter", "shave_needs", "skin_care", "soap", "soft_drinks", "soup_broth_bouillon", "soy_lactosefree", "specialty_cheeses", "specialty_wines_champagnes", "spices_seasonings", "spirits", "spreads", "tea", "tofu_meat_alternatives", "tortillas_flat_bread", "trail_mix_snack_mix", "trash_bags_liners", "vitamins_supplements", "water_seltzer_sparkling_water", "white_wines", "yogurt", " " }));

        jLabel4.setText("Item Name      :");

        jLabel5.setText("Quantity         :");

        quantity1.setModel(new javax.swing.SpinnerNumberModel());

        jButton4.setText("Delete Item");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField4.setColumns(20);
        jTextField4.setRows(5);
        jScrollPane3.setViewportView(jTextField4);

        jLabel6.setText("Delete Form: -----------------------------------------------------------------------------");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemname1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quantity1))
                        .addGap(132, 132, 132))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jButton4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(quantity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int sum=Integer.parseInt(jTextField2.getText());
      int  i=0;
      System.out.println(itemname.getSelectedItem().toString());
      Object sp=quantity.getValue();
      if(itemname.getSelectedItem() =="none")
      { jTextField1.setText(itemname.getSelectedItem() =="none" ? "Select an item" : itemname.getSelectedItem().toString() );}
      else{ PrintWriter writer = null;
        try {
            writer = new PrintWriter(new BufferedWriter(
                    new FileWriter("F:\\itemz.txt", true)));
        } catch (IOException ex) {
            Logger.getLogger(interfac.class.getName()).log(Level.SEVERE, null, ex);
        }
      BufferedReader br = null;
FileReader reader = null;
try {
    reader = new FileReader("F:\\itemz.txt");
    br = new BufferedReader(reader);
    HashMap<String, Integer> map = new HashMap<>();
         //Scanner scanner = new Scanner(new FileInputStream("F:\\ordwitpri.xlsx"));
         String st1,st;
         File file=new File("F:\\itmpri1.txt");//Reading Items From File
        File file1=new File("F:\\itemss.txt");//Reading Item Class From File
        BufferedReader br2=new BufferedReader(new FileReader(file));
        BufferedReader br1=new BufferedReader(new FileReader(file1));
         while((st=br2.readLine())!=null && (st1=br1.readLine())!=null){
           //System.out.print(st1+" ");
            //System.out.println(st);
            int q=Integer.parseInt(st);
            map.put(st1,q);//Creating hashmap for items along with their classes
           
            
        }
         System.out.println(map);
            writer.print(itemname.getSelectedItem());
             writer.print(" ");
              writer.println(sp.toString());
              int e=(Integer)sp;
            Integer z=map.get(itemname.getSelectedItem());
            z=z/10;
            writer.close();
            i=1;
            int r=z*e;
           
            String str;

            DefaultTableModel model=(DefaultTableModel)mdl.getModel();
         int t1,t2,flag=0;
        for(int j = 0; j <mdl.getRowCount(); j++)
        {//For each column in that row
            if(mdl.getModel().getValueAt(j,0).equals(itemname.getSelectedItem()))
            {//Search the model
                
              
                t1= (Integer)mdl.getModel().getValueAt(j,1)+ (Integer)quantity.getValue();
                t2=((Integer)mdl.getModel().getValueAt(j,1)+ (Integer)quantity.getValue())*(Integer)mdl.getModel().getValueAt(j,2);
                    model.setValueAt(t1,j,1);
                    model.setValueAt(t2,j,3);
                     sum=Integer.parseInt(jTextField2.getText())+(((Integer)quantity.getValue())*(Integer)mdl.getModel().getValueAt(j,2));
                    str=Integer.toString(sum);
            jTextField2.setText(str);
                    jTextField1.setText("Item Quantity Succefully updated");
                     jTextField4.setText("");
                    flag=1;
                     break;
                
            }}

            if(flag==0){
                model.addRow(new Object[]{itemname.getSelectedItem(),quantity.getValue(),z,r});
                sum=sum+r;
              str=Integer.toString(sum);
           jTextField2.setText(str);
                    jTextField1.setText("Item Successfully Added");
                    jTextField4.setText("");              
            }
              
                
            
            
        
} catch (FileNotFoundException e) {
    e.printStackTrace();
}         catch (IOException ex) {
              Logger.getLogger(interfac.class.getName()).log(Level.SEVERE, null, ex);
          }finally{
          try {
              reader.close();
          } catch (IOException ex) {
              Logger.getLogger(interfac.class.getName()).log(Level.SEVERE, null, ex);
          }
          

}
     // jTextField1.setText(itemname.getSelectedItem()+" has entered enter next item");
      
      itemname.setSelectedItem("none");}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        File realName = new File("F:\\itemz.txt");
realName.delete();
jTextField1.setText("enter new transaction");
jTextField2.setText("0");
DefaultTableModel dm = (DefaultTableModel)mdl.getModel();
int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
for (int i = rowCount - 1; i >= 0; i--) {
    dm.removeRow(i);
}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      // PrintWriter writer = null;
        //File realName = new File("F:\\itemz1.txt");
//realName.delete();
    //PrintWriter writer;
        if(jTextField3.getText().equals(""))
        {jTextField1.setText("Please Enter Customer id");}
        else{
        try {
            try (PrintWriter writer = new PrintWriter("F:\\itemz1.txt")) {
                writer.print("");
            }  
        } catch (FileNotFoundException ex) {
            Logger.getLogger(interfac.class.getName()).log(Level.SEVERE, null, ex);
        }
  
       String cid=(jTextField3.getText());
try {
            FileWriter outFile = new FileWriter("F:\\itemz1.txt", true);
    PrintWriter out1 = new PrintWriter(outFile);
    try {
         DefaultTableModel dm = (DefaultTableModel)mdl.getModel();
int rowCount = dm.getRowCount();
System.out.println(rowCount);
out1.println(cid);
for(int count=0;count<=rowCount-1;count++){
    out1.append(dm.getValueAt(count, 0).toString());   // System.out.println(dm.getValueAt(count, 0).toString());
           out1.print(" ");
   out1.println(dm.getValueAt(count, 1).toString());
    //writer.println("ahgas");
}
        
    } finally {
       out1.close();
       outFile.close();
    }
}       catch (IOException ex) {
            Logger.getLogger(interfac.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
   //outFile.close();
}
       


        NewClass fet = null;
        try {
            fet = new NewClass();
        } catch (Exception ex) {
            Logger.getLogger(interfac.class.getName()).log(Level.SEVERE, null, ex);
        }
       }    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
DefaultTableModel table= (DefaultTableModel)mdl.getModel();
int t1,t2;
        for(int j = 0; j < mdl.getRowCount(); j++){//For each column in that row
            if(mdl.getModel().getValueAt(j,0).equals(itemname1.getSelectedItem())){//Search the model
                {
                if( (Integer)quantity1.getValue()< (Integer)mdl.getModel().getValueAt(j,1))
                {t1= (Integer)mdl.getModel().getValueAt(j,1)- (Integer)quantity1.getValue();
                t2=((Integer)mdl.getModel().getValueAt(j,1)- (Integer)quantity1.getValue())*(Integer)mdl.getModel().getValueAt(j,2);
                    table.setValueAt(t1,j,1);
                    table.setValueAt(t2,j,3);
                     int sum=Integer.parseInt(jTextField2.getText())-(((Integer)quantity1.getValue())*(Integer)mdl.getModel().getValueAt(j,2));
                    String str=Integer.toString(sum);
            jTextField2.setText(str);
                    jTextField4.setText("Item Quantity Succefully updated");
                     jTextField1.setText("");
                }
                else{
                    int sum=Integer.parseInt(jTextField2.getText())-((Integer)mdl.getModel().getValueAt(j,3));
                    String str=Integer.toString(sum);
                    jTextField2.setText(str);
                    table.removeRow(j);
                    jTextField4.setText("Item Successfully Deleted");
                    jTextField1.setText("");
                }
                    }
                
            }
//Print if found string
            else{
                jTextField4.setText("Enter Valid Item");
            }
            }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new interfac().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(interfac.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(interfac.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox itemname;
    private javax.swing.JComboBox itemname1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextArea jTextField4;
    private javax.swing.JTable mdl;
    private javax.swing.JSpinner quantity;
    private javax.swing.JSpinner quantity1;
    // End of variables declaration//GEN-END:variables
}
